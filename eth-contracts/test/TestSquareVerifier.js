// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require("Verifier");
// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
const Proof = require("../../zokrates/code/square/proof.json");

// Test verification with incorrect proof
contract("TestSquareVerifier", (accounts) => {
  describe("Test Verifier contract", () => {
    beforeEach(async () => {
      this.contract = await Verifier.new({ from: accounts[0] });
    });

    it("Test verification with correct proof", async () => {
      const isVerified = await this.contract.verifyTx(
        Proof.proof.a,
        Proof.proof.b,
        Proof.proof.c,
        Proof.inputs
      );

      assert.equal(
        isVerified,
        true,
        "Transcation could not be verified for correct proof"
      );
    });

    it("Test verification with incorrect proof", async () => {
      const isVerified = await this.contract.verifyTx(
        Proof.proof.a,
        Proof.proof.b,
        Proof.proof.c,
        [3, 2]
      );

      assert.equal(
        isVerified,
        false,
        "Transcation verified for inccorect proof"
      );
    });
  });
});
